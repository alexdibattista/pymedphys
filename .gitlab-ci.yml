variables:
  EXTERNAL_GIT_DIR: "/external-git"
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  CONTAINER_IMAGE: registry.gitlab.com/pymedphys/pymedphys/ci

stages:
  - source-tests
  - build
  - binary-tests
  - ci-utils

source-tests:
  stage: source-tests
  image: $CONTAINER_IMAGE:latest
  script:
    - mkdir $EXTERNAL_GIT_DIR
    - CI_DIR=$PWD

    # Attempt to download the private repo `monorepo`. If access is not
    # available set an env variable `RUN_PRIVATE_TESTS=no`
    - cd $EXTERNAL_GIT_DIR; export RUN_PRIVATE_TESTS=yes && git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/CCA-Physics/monorepo.git || export RUN_PRIVATE_TESTS=no; cd $CI_DIR
    - bash ./scripts/gitlab-ci-pipelines/source-tests/01-install-pymedphys.sh
    - bash ./scripts/gitlab-ci-pipelines/source-tests/02-check-nbstripout.sh

    # Only install private packages if `RUN_PRIVATE_TESTS` is set to yes
    - if [ "$RUN_PRIVATE_TESTS" = yes ]; then bash ./scripts/gitlab-ci-pipelines/source-tests/03-install-private.sh; fi
    - bash ./scripts/gitlab-ci-pipelines/source-tests/04-test.sh

build-application:
  stage: build
  image: electronuserland/builder:wine-chrome
  script:
    - cd applications/desktop && yarn dist


binary-tests:
  stage: binary-tests

ci-docker-build:
  stage: ci-utils
  image: docker:stable
  services:
    - docker:dind
  script:
    # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#authenticating-to-the-container-registry
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

    # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#using-docker-caching
    - docker pull $CONTAINER_IMAGE:latest || true
    - docker build --cache-from $CONTAINER_IMAGE:latest --tag $CONTAINER_IMAGE:$CI_COMMIT_SHA --tag $CONTAINER_IMAGE:latest ./scripts/gitlab-ci-pipelines/ci-utils/ci-docker-build
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_SHA
    - docker push $CONTAINER_IMAGE:latest
  only:
    - master